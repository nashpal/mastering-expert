/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"
#include "EmbeddedImage.h"

//==============================================================================
/**
*/
class TestPluginAudioProcessorEditor  : public AudioProcessorEditor,
                                        public Slider::Listener,
                                        public Button::Listener,
                                        public ChangeListener, // For infrequent broadcasts from processor.
                                        public Timer
{
public:
    TestPluginAudioProcessorEditor (TestPluginAudioProcessor&);
    ~TestPluginAudioProcessorEditor();

    //==============================================================================
    void paint (Graphics&) override;
    void resized() override;
    
    void sliderValueChanged (Slider*) override;
    void sliderDragStarted  (Slider*) override;
    void sliderDragEnded    (Slider*) override;
    
    void buttonClicked      (Button*) override;
    
    void changeListenerCallback (ChangeBroadcaster* source) override;
    
    void timerCallback() override;

private:

    // Reset display.
    void reset();
    
    EmbeddedImage logo;
    Slider gainSlider;
    Label gainLabel;
    
    Label headroomBreachedLabel;
    Label dynamicRangeLabel;
    
    TextButton resetButton;
    TextButton monoButton;
    
    TestPluginAudioProcessor& getProcessor() const
    {
        return static_cast<TestPluginAudioProcessor&> (processor);
    }
    
    AudioProcessorParameter* getParameterFromSlider (const Slider*) const;
    
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (TestPluginAudioProcessorEditor)
};


#endif  // PLUGINEDITOR_H_INCLUDED
